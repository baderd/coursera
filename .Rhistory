installed.packages('texliveonfly')
install.packages('texliveonfly')
library(data.table)
library(R.utils)
noaa_file= 'repData_peer2/noaa_stormdata.csv.bz2'
foo= fread(noaa_file, header=T, sep=',', stringsAsFactors = F,  drop='REMARKS', colClasses=rep(NULL,36))
foo= fread(paste("bunzip2 -c",noaa_file), header=T, sep=',', stringsAsFactors = F, drop='REMARKS', colClasses=rep(NULL,36))
foo= fread(paste("bunzip2 -c",noaa_file), header=T, sep=',', stringsAsFactors = F, drop='REMARKS', colClasses=colc)
colc= c(rep(NULL,35),'character',NULL)
foo= fread(paste("bunzip2 -c",noaa_file), header=T, sep=',', stringsAsFactors = F, drop='REMARKS', colClasses=colc)
noaa_table
noaa_table= as.data.table(read.csv(noaa_file))
noaa_table= noaa_table[,-REMARKS]
noaa_table
noaa_table= as.data.table(read.csv(noaa_file))
noaa_table[,setdiff(.SD,REMARKS)]
noaa_table
saveRDS(noaa_table, file="repData_peer2/noaa_table.RDS")
noaa_table[,setdiff(.SD,REMARKS)]
noaa_table[,setdiff(1:37,36), with=F]
noaa_table=noaa_table[,setdiff(1:37,36), with=F]
noaa_table
saveRDS(noaa_table, file="repData_peer2/noaa_table.RDS")
table(noaa_table$STATE__)
table(noaa_table$STATEOFFIC)
noaa_table
dmg_noaa_table= noaa_table[, list(EVTYPE, FATALITIES, INJURIES, PROPDMG, CROPDMG)]
dmg_noaa_table
noaa_file= 'repData_peer2/noaa_stormdata.csv.bz2'
exists(noaa_file)
noaa_table= as.data.table(read.csv(noaa_file))[,setdiff(1:37,colidx_remarks), with=F]
!exists(noaa_file)
list.files('repData_peer2/')
download.file("http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2",
destfile= noaa_file
)
exists(noaa_file)
file.exists(noaa_file)
library(data.table)
!file.exists(noaa_bak)
noaa_file= 'repData_peer2/noaa_stormdata.csv.bz2'
noaa_bak= "repData_peer2/noaa_table.RDS"
file.exists(noaa_bak)
!file.exists(noaa_bak)
noaa_file= 'repData_peer2/noaa_stormdata.csv.bz2'
noaa_link= "http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
noaa_file= 'repData_peer2/noaa_stormdata.csv.bz2'
noaa_bak= "repData_peer2/noaa_table.RDS"
if(!file.exists(noaa_bak)){
download.file(noaa_link, destfile= noaa_file)
colidx_remarks= 36
noaa_table= as.data.table(read.csv(noaa_file))[,setdiff(1:37,colidx_remarks), with=F]
saveRDS(noaa_table, file=noaa_bak)
}else{
noaa_table= readRDS(noaa_bak)
}
tryCatch(
download.file(noaa_link, destfile= noaa_file, mode='wb'),
error= funcion(e){
message(e)
},finally ={
message('Could not download file.')
}
)
tryCatch({
download.file(noaa_link, destfile= noaa_file, mode='wb')
},
error= funcion(e){
message(e)
},finally ={
message('Could not download file.')
}
)
tryCatch({
download.file(noaa_link, destfile= noaa_file, mode='wb')
}, finally ={
message('Could not download file.')
}
)
tryCatch({
download.file(noaa_link, destfile= noaa_file, mode='wb')
}, error=function(e){
message(e)
}, finally ={
message('Could not download file.')
}
)
library(RCurl)
install.packages('RCurl')
library(RCurl)
library(RCurl)
exit
quit()
library(data.table)
library(RCurl)
noaa_link= "http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
noaa_file= "repData_peer2/noaa_stormdata.csv.bz2"
noaa_bak= "repData_peer2/noaa_table.RDS"
install.packages('RCurl')
library(RCurl)
colidx_remarks= 36
noaa_table= as.data.table(read.csv(text=getURL(noaa_link, ssl.verifypeer=0L, followlocation=1L)))[,setdiff(1:37,colidx_remarks), with=F]
noaa_link= "http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
noaa_file= "repData_peer2/noaa_stormdata.csv.bz2"
noaa_bak= "repData_peer2/noaa_table.RDS"
foo= getURL(noaa_link, ssl.verifypeer=0L, followlocation=1L))
foo= getURL(noaa_link, ssl.verifypeer=0L, followlocation=1L)
noaa_link= "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
foo= getURL(noaa_link, ssl.verifypeer=0L, followlocation=1L)
foo= getURL(noaa_link)
foo= getURL(noaa_link, binary=T)
foo= getURLContent(noaa_link, binary=T)
noaa_table= as.data.table(read.csv(text=foo))[,setdiff(1:37,colidx_remarks), with=F]
foo
foo= getURLContent(noaa_link)
colidx_remarks= 36
noaa_table= as.data.table(read.csv(text=foo))[,setdiff(1:37,colidx_remarks), with=F]
noaa_table= as.data.table(read.csv(foo))[,setdiff(1:37,colidx_remarks), with=F]
foo
str(foo)
noaa_table= as.data.table(read.csv(bzfile(foo)))[,setdiff(1:37,colidx_remarks), with=F]
noaa_table= as.data.table(read.csv(noaa_file)[,setdiff(1:37,colidx_remarks), with=F]
)
noaa_file= "repData_peer2/noaa_stormdata.csv.bz2"
noaa_bak= "repData_peer2/noaa_table.RDS"
noaa_link= ""
foo= fread(noaa_file, colClasses=rep(NULL, 35))
foo= fread(paste("bunzip -c",noaa_file), colClasses=rep(NULL, 35))
foo= fread(paste("bunzip2 -c",noaa_file), colClasses=rep(NULL, 35))
noaa_file= "repData_peer2/noaa_stormdata.csv.bz2"
noaa_bak= "repData_peer2/noaa_table.RDS"
noaa_table= as.data.table(read.csv(noaa_file))[,setdiff(1:37,colidx_remarks), with=F]
setwd("~/workspace/coursera")
dmg_noaa_table= noaa_table[, list(EVTYPE, FATALITIES, INJURIES, PROPDMG, CROPDMG)]
dmg_noaa_table
table(dmg_noaa_table$EVTYPE)
unique(dmg_noaa_table$EVTYPE)
barplot2(dmg_noaa_table$EVTYPE, horiz=T)
library(gplot)
library(gplots)
install.package('gplots')
install.packages('gplots')
library(gplots)
barplot2(dmg_noaa_table$EVTYPE, horiz=T)
dmg_noaa_table$EVTYPE
barplot2(sort(table(dmg_noaa_table$EVTYPE)), horiz=T)
barplot2(sort(table(dmg_noaa_table$EVTYPE)), horiz=T, las=2)
par(mar=c(4,10,1,1))
barplot2(sort(table(dmg_noaa_table$EVTYPE)), horiz=T, las=2)
sort(table(dmg_noaa_table$EVTYPE))
dmg_noaa_table[,table,by=EVTYPE]
dmg_noaa_table[,table(EVTYPE),by=EVTYPE]
dmg_noaa_table[,table(EVTYPE)]
sort(table(dmg_noaa_table$EVTYPE))
sort(table(dmg_noaa_table$EVTYPE), decreasing = F)
sort(table(dmg_noaa_table$EVTYPE), decreasing = T)
evcounts= table(dmg_noaa_table$EVTYPE)
evcounts[1:10]
evcounts= sort(table(dmg_noaa_table$EVTYPE), decreasing = T)
evcounts[1:10]
topev= evcounts[1:10]
topev
dmg_noaa_table
num_evtypes=unique(dmg_noaa_table$EVTYPE)
evcounts= sort(table(dmg_noaa_table$EVTYPE), decreasing = T)
```
The table contains `numevtypes` different weather events. Ten most frequent events:
```{r}
evcounts[1:10]
noaa_table
barplot2(evcounts[1:10], horiz=T)
barplot2(evcounts[1:10], horiz=T, las=2)
barplot2(evcounts[1:10], horiz=T, las=2, mar=c(4,4,1,1))
barplot2(evcounts[1:10], horiz=T, las=2, mar=c(4,10,1,1))
par(mar=c(4,10,1,1))
barplot2(evcounts[1:10], horiz=T)
barplot2(evcounts[1:10], horiz=T, las=2)
barplot2(evcounts[1:10], horiz=T, las=3)
barplot2(evcounts[1:10], horiz=T, las=1)
noaa_table= readRDS(noaa_bak)
dmg_noaa_table= noaa_table[, list(EVTYPE, FATALITIES, INJURIES, PROPDMG, CROPDMG)]
dmg_noaa_table
noaa_table= as.data.table(read.csv(noaa_file))[,setdiff(1:37,colidx_remarks), with=F]
saveRDS(noaa_table, file=noaa_bak)
noaa_table= readRDS(noaa_bak)
class(noaa_table)
dmg_noaa_table= noaa_table[, list('EVTYPE', 'FATALITIES', 'INJURIES', 'PROPDMG', 'CROPDMG')]
dmg_noaa_table
dmg_noaa_table= noaa_table[, list('EVTYPE', 'FATALITIES', 'INJURIES', 'PROPDMG', 'CROPDMG'), with=F]
dmg_noaa_table
noaa_table
dmg_noaa_table= noaa_table[, c('EVTYPE', 'FATALITIES', 'INJURIES', 'PROPDMG', 'CROPDMG'), with=F]
dmg_noaa_table
num_evtypes
length(unique(dmg_noaa_table$EVTYPE))
dmg_noaa_table[,sum(FATALITIES),by=EVTYPE]
dmg_noaa_table[,sum_fat:=sum(FATALITIES),by=EVTYPE]
dmg_noaa_table
dmg_noaa_table[,list(sum_fat):=sum(FATALITIES),by=EVTYPE]
dmg_noaa_table[,list('sum_fat'):=sum(FATALITIES),by=EVTYPE]
dmg_noaa_table[,list('sum_fat'):=list(sum(FATALITIES)), by=EVTYPE]
dmg_noaa_table[,c('sum_fat'):=list(sum(FATALITIES)), by=EVTYPE]
dmg_noaa_table
dmg_noaa_table[,c('sum_fat', 'sum_inj'):=list(sum(FATALITIES), sum(INJURIES)), by=EVTYPE]
dmg_noaa_table
unique(dmg_noaa_table[,list(EVTYPE, sum_fat)]
)
unique(dmg_noaa_table[,list(EVTYPE, sum_fat, sum_inj)])
human_dmg= unique(dmg_noaa_table[,list(EVTYPE, sum_fat, sum_inj)])
human_dmg[order(sum_fat)]
human_dmg[-order(sum_fat)]
human_dmg[order(-sum_fat)]
barplot(human_dmg[order(-sum_fat)][1:10])
barplot2(human_dmg[order(-sum_fat)][1:10])
barplot2(human_dmg[order(-sum_fat)][1:10][[sum_fat]])
barplot2(human_dmg[order(-sum_fat)][1:10][['sum_fat']])
barplot2( data.frame(human_dmg[order(-sum_fat)][1:10])[,1:2] )
[['sum_fat']]
barplot2( human_dmg[order(-sum_fat)][1:10][['sum_fat']])
barplot2( top_fat[['sum_fat']], xlab = top_fat[['EVTYPE']])
top_fat= human_dmg[order(-sum_fat)][1:10]
barplot2( top_fat[['sum_fat']], xlab = top_fat[['EVTYPE']])
barplot2( top_fat[['sum_fat']], names.arg = top_fat[['EVTYPE']])
barplot2( top_fat[['sum_fat']], names.arg = top_fat[['EVTYPE']], horiz=T, las=1)
barplot2(sum_fat~ EVTYPE, data=top_fat)
barplot(sum_fat~ EVTYPE, data=top_fat)
plot(sum_fat~ EVTYPE, data=top_fat)
plot(sum_fat~ EVTYPE, data=top_fat, type='l')
dmg_noaa_table
dmg_noaa_table[,c('sum_prop', 'sum_crop'):=list(sum(PROPDMG), sum(CROPDMG)), by=EVTYPE]
econ_dmg= unique(dmg_noaa_table[,list(EVTYPE, sum_prop, sum_crop)])
noaa_table
table(noaa_table$PROPDMGEXP)
noaa_table
unique(dmg_noaa_table$CROPDMGEXP)
dmg_noaa_table= noaa_table[, c('EVTYPE',
'FATALITIES', 'INJURIES',
'PROPDMG', 'CROPDMG', 'PROPDMGEXP', 'CROPDMGEXP'), with=F]
unique(dmg_noaa_table$CROPDMGEXP)
union( with(dmg_noaa_table, unique(CROPDMGEXP), unique(PROPDMGEXP)))
with(dmg_noaa_table, union( unique(CROPDMGEXP), unique(PROPDMGEXP)))
sort(with(dmg_noaa_table, union( unique(CROPDMGEXP), unique(PROPDMGEXP))))
dmgexp= data.table(symbol=sort(with(dmg_noaa_table, union( unique(CROPDMGEXP), unique(PROPDMGEXP)))),
exp=c(rep(0,4), 0:8, 9, 2,2, 3,3,6,6)
)
dmgexp
dmg_exp[symbol %in% dmg_noaa_table]
dmg_exp= data.table(symbol=sort(with(dmg_noaa_table, union( unique(CROPDMGEXP), unique(PROPDMGEXP)))),
exp=c(rep(0,4), 0:8, 9, 2,2, 3,3,6,6)
)
dmg_exp[symbol %in% dmg_noaa_table$PROPGMFEXP]
dmg_exp[symbol == dmg_noaa_table$PROPGMFEXP]
dmg_exp[match(symbol, dmg_noaa_table$PROPGMFEXP)]
dmg_exp[match(symbol, dmg_noaa_table$PROPGMFEXP), exp]
match(dmg_exp$symbol, dmg_noaa_table$PROPGMFEXP)
match(dmg_noaa_table$PROPGMFEXP, dmg_exp$symbol)
dmg_noaa_table$PROPGMFEXP
dmg_noaa_table$PROPGMFEXP
match(dmg_noaa_table$PROPGMFEXP, dmg_exp$symbol)
dmg_noaa_table$PROPGMFEXP
dmg_noaa_table$PROPGMFEXP)
dmg_noaa_table$PROPDMGFEXP
dmg_noaa_table$PROPDMGEXP
dmg_exp[match(symbol, dmg_noaa_table$PROPDMGEXP), exp]
dmg_exp[match(dmg_noaa_table$PROPDMGEXP, symbol), exp]
x=dmg_exp[match(dmg_noaa_table$PROPDMGEXP, symbol), exp]
table(x)
x= dmg_noaa_table[, PROPDMG * 10 ^ dmg_exp[match(dmg_noaa_table$PROPDMGEXP, symbol), exp]]
summary(x)
x= head(dmg_noaa_table[, PROPDMG * 10 ^ dmg_exp[match(dmg_noaa_table$PROPDMGEXP, symbol), exp]])
head(dmg_noaa_table[, PROPDMG * 10 ^ dmg_exp[match(dmg_noaa_table$PROPDMGEXP, symbol), exp]])
dmg_noaa_table[, prop_dollar:=PROPDMG * 10 ^ dmg_exp[match(dmg_noaa_table$PROPDMGEXP, symbol), exp]]
head(dmg_noaa_table)
dmg_noaa_table[, crop_dollar:=CROPDMG * 10 ^ dmg_exp[match(dmg_noaa_table$CROPDMGEXP, symbol), exp]]
head(dmg_noaa_table)
dmg_noaa_table
dmg_noaa_table[, crop_dollar:=CROPDMG * 10 ^ dmg_exp[match(CROPDMGEXP, symbol), exp]]
dmg_noaa_table
dmg_noaa_table[, prop_dollar:=PROPDMG * 10 ^ dmg_exp[match(PROPDMGEXP, symbol), exp]]
dmg_noaa_table[, crop_dollar:=CROPDMG * 10 ^ dmg_exp[match(CROPDMGEXP, symbol), exp]]
dmg_noaa_table
dmg_noaa_table[, c('prop_dollar', 'crop_dollar'):=
list(PROPDMG * 10 ^ dmg_exp[match(PROPDMGEXP, symbol), exp],
,CROPDMG * 10 ^ dmg_exp[match(CROPDMGEXP, symbol), exp])
]
dmg_noaa_table[, c('prop_dollar', 'crop_dollar'):=
list(PROPDMG * 10 ^ dmg_exp[match(PROPDMGEXP, symbol), exp],
CROPDMG * 10 ^ dmg_exp[match(CROPDMGEXP, symbol), exp]
)
]
dmg_noaa_table
setwd("~/workspace/coursera/repData_peer2/")
noaa_link= "http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
noaa_file= "noaa_stormdata.csv.bz2"
noaa_bak= "noaa_table.RDS"
if(!file.exists(noaa_bak)){
download.file(noaa_link, destfile=noaa_file)
colidx_remarks= 36
noaa_table= as.data.table(read.csv(noaa_file))[,setdiff(1:37,colidx_remarks), with=F]
saveRDS(noaa_table, file=noaa_bak)
}else{
noaa_table= readRDS(noaa_bak)
}
noaa_table
View(dmg_exp)
